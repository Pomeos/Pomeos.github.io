{"meta":{"title":"Pomeos","subtitle":"","description":"偷得浮生半日闲","author":"Pomeos","url":"https://pomeos.github.io","root":"/"},"pages":[{"title":"留言板","date":"2020-07-25T15:31:41.000Z","updated":"2020-07-25T16:17:08.179Z","comments":true,"path":"MessageBoard/index.html","permalink":"https://pomeos.github.io/MessageBoard/index.html","excerpt":"","text":""},{"title":"关于","date":"2020-07-22T08:29:40.000Z","updated":"2020-07-25T15:24:11.392Z","comments":false,"path":"about/index.html","permalink":"https://pomeos.github.io/about/index.html","excerpt":"","text":"天不生我搬运工， 搬道万古如长夜！"},{"title":"分类","date":"2020-07-22T03:24:34.000Z","updated":"2020-07-25T15:27:32.098Z","comments":false,"path":"categories/index.html","permalink":"https://pomeos.github.io/categories/index.html","excerpt":"","text":""},{"title":"归档","date":"2020-07-22T06:43:11.000Z","updated":"2020-07-22T07:17:04.487Z","comments":true,"path":"archives/index.html","permalink":"https://pomeos.github.io/archives/index.html","excerpt":"","text":""},{"title":"图片","date":"2020-07-22T14:07:03.000Z","updated":"2020-07-25T15:26:35.640Z","comments":false,"path":"images/index.html","permalink":"https://pomeos.github.io/images/index.html","excerpt":"","text":"图片来源于网络，如有侵权请联系删除 ！​"},{"title":"友情链接","date":"2020-07-22T08:35:51.000Z","updated":"2020-07-25T15:25:38.016Z","comments":false,"path":"link/index.html","permalink":"https://pomeos.github.io/link/index.html","excerpt":"","text":""},{"title":"音乐","date":"2020-07-22T14:07:26.000Z","updated":"2020-07-25T15:26:24.067Z","comments":false,"path":"musics/index.html","permalink":"https://pomeos.github.io/musics/index.html","excerpt":"","text":""},{"title":"标签","date":"2020-07-22T03:24:09.000Z","updated":"2020-07-25T15:28:05.938Z","comments":false,"path":"tags/index.html","permalink":"https://pomeos.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"英语学习笔记","slug":"英语学习笔记","date":"2020-07-23T16:56:03.000Z","updated":"2020-07-25T10:04:14.972Z","comments":true,"path":"2020/07/24/英语学习笔记/","link":"","permalink":"https://pomeos.github.io/2020/07/24/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","excerpt":"","text":"day(01)单词 verb动词 adjective形容词 adverb副词 noun名词 farewell名词：送别，分手，别离，告别形容词：临别的，告别的动词：作别，告别 blog博客 repository名词：知识库，栈，栈房，资料库 branch名词：科，支，分会，部门，分枝，枝，分，枝条，分岔，网点，分号动词：分枝 comments注释 pull动词：拉，拔，扳，扯，挽，拖，扣，揪，划，起，牵线，搐，攀，划船，掣，撦，窣名词：拉力，拖，张力，靠山 populate动词：移民，孳，填充短语 more features更多功能 一日一句 Wherever you go, no matter what the weather, always bring your own sunshine.无论去哪儿，无论天气如何，记得带上自己的阳光。 day(02)单词 faraway形容词：遥远，远，偏远，久远，遥，辽，邈，逌，遥遥，幽幽 rooster名词：公鸡，雄鸡 slaughter动词：屠宰，屠杀，杀戮，屠，杀名词：宰，宰杀，残杀 collaboration名词：合作短语 一日一句","categories":[],"tags":[{"name":"英语","slug":"英语","permalink":"https://pomeos.github.io/tags/%E8%8B%B1%E8%AF%AD/"},{"name":"笔记","slug":"笔记","permalink":"https://pomeos.github.io/tags/%E7%AC%94%E8%AE%B0/"}]},{"title":"认识JAVA","slug":"认识JAVA","date":"2020-07-23T12:37:44.000Z","updated":"2020-07-25T09:58:36.253Z","comments":true,"path":"2020/07/23/认识JAVA/","link":"","permalink":"https://pomeos.github.io/2020/07/23/%E8%AE%A4%E8%AF%86JAVA/","excerpt":"","text":"1. Java基础1.1 Java入门1.1.1 Java语言的特点 简单易学 面向对象（继承、封装、多态） 平台无关性（Java虚拟机实现平台无关性） 可靠性 安全性 支持多线程 支持网络编程并且很方便（Java语言本身就是为了简化网络编程而设计的） 编译并解释内存 1.1.2 关于JVM、JDK、JRE1.1.2.1 JVM JVM是Java Virtual Machine（Java虚拟机）的缩写，JVM是一种用于计算设备的规范，它是一个虚构出来的计算机，是通过在实际的计算机上仿真模拟各种计算机功能来实现的。引入Java语言虚拟机后，Java语言在不同平台上运行时不需要重新编译。Java语言使用Java虚拟机屏蔽了与具体平台相关的信息，使得Java语言编译程序只需生成在Java虚拟机上运行的目标代码（字节码），就可以在多种平台上不加修改地运行。 1.1.2.2关于字节码 在 Java 中，JVM 可以理解的代码就叫做字节码（即扩展名为 .class 的文件），它不面向任何特定的处理器，只面向虚拟机。Java 语言通过字节码的方式，在一定程度上解决了传统解释型语言执行效率低的问题，同时又保留了解释型语言可移植的特点。所以 Java 程序运行时比较高效，而且，由于字节码并不针对一种特定的机器，因此，Java 程序无须重新编译便可在多种不同操作系统的计算机上运行。 1.1.2.3 JDK和JRE JDK 是 Java Development Kit，它是功能齐全的 Java SDK。它拥有 JRE 所拥有的一切，还有编译器（javac）和工具（如 javadoc 和 jdb）。它能够创建和编译程序。 JRE 是 Java 运行时环境。它是运行已编译 Java 程序所需的所有内容的集合，包括 Java 虚拟机（JVM），Java 类库，java 命令和其他的一些基础构件。但是，它不能用于创建新程序。 如果你只是为了运行一下 Java 程序的话，那么你只需要安装 JRE 就可以了。如果你需要进行一些 Java 编程方面的工作，那么你就需要安装 JDK 了。但是，这不是绝对的。有时，即使您不打算在计算机上进行任何 Java 开发，仍然需要安装 JDK。例如，如果要使用 JSP 部署 Web 应用程序，那么从技术上讲，您只是在应用程序服务器中运行 Java 程序。那你为什么需要 JDK 呢？因为应用程序服务器会将 JSP 转换为 Java servlet，并且需要使用 JDK 来编译 servlet。 1.1.3 Java程序从源代码到运行一般有下面 3 步： 我们需要格外注意的是 .class-&gt;机器码 这一步。在这一步 JVM 类加载器首先加载字节码文件，然后通过解释器逐行解释执行，这种方式的执行速度会相对比较慢。而且，有些方法和代码块是经常需要被调用的(也就是所谓的热点代码)，所以后面引进了 JIT 编译器，而 JIT 属于运行时编译。当 JIT 编译器完成第一次编译后，其会将字节码对应的机器码保存下来，下次可以直接使用。而我们知道，机器码的运行效率肯定是高于 Java 解释器的。这也解释了我们为什么经常会说 Java 是编译与解释共存的语言。 1.1.4 什么是 Java程序的主类？ 应用程序和小程序的主类有何不同? 一个程序中可以有多个类，但只能有一个类是主类。在 Java 应用程序中，这个主类是指包含 main（）方法的类。而在 Java 小程序中，这个主类是一个继承自系统类 JApplet 或 Applet 的子类。应用程序的主类不一定要求是 public 类，但小程序的主类要求必须是 public 类。主类是 Java 程序执行的入口点。 1.1.5 Java 应用程序与小程序之间有哪些差别? 应用程序是从主线程启动(也就是 main() 方法)。applet 小程序没有 main() 方法，主要是嵌在浏览器页面上运行(调用init()或者run()来启动)，嵌入浏览器这点跟 flash 的小游戏类似。 1.1.6. 为什么说 Java 语言“编译与解释并存”？ 高级编程语言按照程序的执行方式分为编译型和解释型两种。编译型语言是指编译器针对特定的操作系统将源代码一次性翻译成可被该平台执行的机器码；解释型语言是指解释器对源程序逐行解释成特定平台的机器码并立即执行。 Java 语言既具有编译型语言的特征，也具有解释型语言的特征，因为 Java 程序要经过先编译，后解释两个步骤，由 Java 编写的程序需要先经过编译步骤，生成字节码（*.class 文件），这种字节码必须由 Java 解释器来解释执行。因此，我们可以认为 Java 语言编译与解释并存。 1.1.7 Java 和 C++的区别? 都是面向对象的语言，都支持封装、继承和多态 Java 不提供指针来直接访问内存，程序内存更加安全 Java 的类是单继承的，C++ 支持多重继承；虽然 Java 的类不可以多继承，但是接口可以多继承。 Java 有自动内存管理机制，不需要程序员手动释放无用内存 在 C 语言中，字符串或字符数组最后都会有一个额外的字符’\\0’来表示结束。但是，Java 语言中没有结束符这一概念。 图片和素材来源于网络，如有侵权请联系删除 ！​ 参考文献： https://gitee.com/SnailClimb/JavaGuide","categories":[],"tags":[{"name":"JAVA","slug":"JAVA","permalink":"https://pomeos.github.io/tags/JAVA/"}]},{"title":"我的第一篇博客文章","slug":"我的第一篇博客文章","date":"2020-07-21T13:32:32.000Z","updated":"2020-07-21T16:00:00.000Z","comments":true,"path":"2020/07/21/我的第一篇博客文章/","link":"","permalink":"https://pomeos.github.io/2020/07/21/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/","excerpt":"学习Markdown文档的编写","text":"学习Markdown文档的编写 一、转义在需要转义的符号前加反斜杠：\\ 符号 名称 转义 \\ 反斜杠 \\\\ ` 反引号 \\` * 星号 \\* _ 下划线 \\_ {} 大括号 \\{\\} [] 中括号 \\[\\] () 小括号 \\(\\) # 井号 \\# + 加号 \\+ - 减号 \\- . 英文句号 \\. ! 感叹号 \\! 二、标题想要设置为标题的文字前面加#来表示一个#是一级标题，二个#是二级标题，以此类推，支持六级标题。注：标准语法一般在#后跟个空格再写文字 示例：# 一级标题## 二级标题### 三级标题####四级级标题##### 五级级标题###### 六级级标题 效果如下： 一级标题二级标题三级标题四级级标题五级级标题六级级标题 三、字体加粗要加粗的文字左右分别用两个*号包起来 斜体要倾斜的文字左右分别用一个*号或者用_包起来 斜体加粗要倾斜和加粗的文字左右分别用三个*号包起来 删除线要加删除线的文字左右分别用两个~~号包起来 示例：*倾斜1*_倾斜2_**加粗*****倾斜且加粗***~~删除~~ 效果如下：倾斜1倾斜2加粗倾斜且加粗删除 四、引用在引用的文字前加&gt;即可。引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt;n个… 示例：&gt;引用&gt;&gt;引用&gt;&gt;&gt;引用 效果如下： 引用1 引用2 引用3 五、分割线三个或者三个以上的-或者*都可以。 示例：---*** 效果如下： 六、图片语法：![图片alt](图片地址 &quot;图片title&quot;)图片alt就是显示在图片下面的文字，相当于对图片内容的解释。图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加 示例：![404](/extra/404.PNG &quot;404&quot;) 效果如下： 七、超链接语法： [超链接名](超链接地址 &quot;超链接title&quot;)title可加可不加 示例：[百度](http://baidu.com &quot;www.baidu.com&quot;) 效果如下：百度 八、列表无序列表语法：无序列表用- + *任何一种都可以注意：- + * 跟内容之间都要有一个空格 示例：- 列表内容+ 列表内容* 列表内容 效果如下： 列表内容 列表内容 列表内容 有序列表语法：数字加点注意：序号跟内容之间要有空格 示例：1. 列表内容2. 列表内容3. 列表内容 效果如下： 列表内容 列表内容 列表内容 列表嵌套上一级和下一级之间敲三个空格即可 效果如下： 一级无序列表内容 二级无序列表内容 二级无序列表内容 二级无序列表内容 一级无序列表内容 二级有序列表内容 二级有序列表内容 二级有序列表内容 一级有序列表内容 二级无序列表内容 二级无序列表内容 二级无序列表内容 一级有序列表内容 二级有序列表内容 二级有序列表内容 二级有序列表内容 九、表格语法：表头|表头|表头---|:--:|---:内容|内容|内容内容|内容|内容第二行分割表头和内容-有一个就行，为了对齐，多加了几个文字默认居左-两边加：表示文字居中-右边加：表示文字居右注：原生的语法两边都要用 | 包起来。此处省略 示例：|表头| 表头 | 表头 ||-|:-:|-:|| 第一行 | 第一行 | 第一行 || 第二行 | 第二行 | 第二行 || 第三行 | 第三行 | 第三行 | 效果如下： 表头 表头 表头 第一行 第一行 第一行 第二行 第二行 第二行 第三行 第三行 第三行 十、代码语法：单行代码：代码之间分别用一个反引号包起来 `代码内容`代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行 ``` 代码内容 ``` 十二、换行内容末尾加上两个空格 图片和素材来源于网络，如有侵权请联系删除 ！​ 参考文献：https://www.jianshu.com/p/f378e3f2e7e1https://www.jianshu.com/p/5158c5ac7aa6https://github.com/IreneHanBhttps://www.cnblogs.com/irenehanb/p/10967834.html","categories":[],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://pomeos.github.io/tags/%E9%9A%8F%E7%AC%94/"}]},{"title":"Hello World","slug":"hello-world","date":"2020-07-21T13:26:16.813Z","updated":"2020-07-25T09:46:45.578Z","comments":true,"path":"2020/07/21/hello-world/","link":"","permalink":"https://pomeos.github.io/2020/07/21/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[{"name":"英语","slug":"英语","permalink":"https://pomeos.github.io/tags/%E8%8B%B1%E8%AF%AD/"},{"name":"笔记","slug":"笔记","permalink":"https://pomeos.github.io/tags/%E7%AC%94%E8%AE%B0/"},{"name":"JAVA","slug":"JAVA","permalink":"https://pomeos.github.io/tags/JAVA/"},{"name":"随笔","slug":"随笔","permalink":"https://pomeos.github.io/tags/%E9%9A%8F%E7%AC%94/"}]}